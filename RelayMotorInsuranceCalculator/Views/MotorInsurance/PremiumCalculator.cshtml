@using RelayMotorInsuranceCalculator.DAL.Entities
@model RelayMotorInsuranceCalculator.ViewModels.MotorInsurance.PremiumCalculatorVm

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepicker")
    <script>
        function AddDriver() {
            $.ajax({
                url: '/MotorInsurance/AddDriver',
                type: "POST",
                data: $("#Form").serialize(),
                success: function (data) {
                    $('#Drivers').html(data);
                    ReloadPickerValidation();
                }
            });
        }

        function RemoveDriver(index) {
            $.ajax({
                url: '/MotorInsurance/RemoveDriver',
                type: "POST",
                data: $("#Form").serialize() + "&index=" + index,
                success: function (data) {
                    $('#Drivers').html(data);
                    ReloadPickerValidation();
                }
            });
        }

        function AddClaim(index) {
            $.ajax({
                url: '/MotorInsurance/AddClaim',
                type: "POST",
                data: $("#Form").serialize() + "&index=" + index,
                success: function (data) {
                    $('#Drivers').html(data);
                    ReloadPickerValidation();
                }
            });
        }

        function RemoveClaim(driver, claim) {
            $.ajax({
                url: '/MotorInsurance/RemoveClaim',
                type: "POST",
                data: $("#Form").serialize() + "&driver=" + driver + "&claim=" + claim,
                success: function (data) {
                    $('#Drivers').html(data);
                    ReloadPickerValidation();
                }
            });
        }

        function Calculate() {
            if ($('#Form').valid()) {
                $.ajax({
                    url: '/MotorInsurance/Calculate',
                    type: "POST",
                    data: $("#Form").serialize(),
                    success: function (data) {
                        ReloadPickerValidation();
                        ShowAlert(data.messageType, data.message);
                    }
                });
            }
        }

        function ReloadPickerValidation() {
            $('#Form').removeData('unobtrusiveValidation');
            $('#Form').removeData('validator');
            $.validator.unobtrusive.parse('#Form');
            $('.agedatepicker').datetimepicker({
                format: 'L',
                locale: 'en-gb',
                minDate: moment().subtract(130, 'years'),
                maxDate: moment().subtract(5, 'years')

            });
            $('.claimdatepicker').datetimepicker({
                format: 'L',
                locale: 'en-gb',
                showTodayButton: true,
                minDate: moment().subtract(5, 'years'),
                maxDate: moment()
            });
        }
    </script>
}


<div class="row" style="margin-left: 10px; margin-bottom: 10px">
    <h2>Motor Insurance Premium Calculation</h2>
</div>
@using (Html.BeginForm("Calculate", "MotorInsurance", FormMethod.Post, new { id = "Form" }))
{
    <div class="row">
        <div class="col-md-2" style="margin-top: 7px;margin-left: 12px">
            Policy Start Date
        </div>
        <div class='col-md-2' style="margin-left: -7px;">
            <div class="form-group">
                <div class='input-group date datepicker'>
                    @Html.EditorFor(o => o.Policy.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top:25px">
        <div id="Drivers">
            @Html.Partial("_Drivers")
        </div>
    </div>
    <div class="row">
        <div id="message"></div>
        <div class="pull-right col-md-2">
            <button class="btn btn-default btn-primary" onclick="Calculate()" type="button">Calculate</button>
        </div>
    </div>
}

